<%
    const formatNepaleseCurrency = (number) => {
        if (number === null || number === undefined || isNaN(number)) return '0';
        return Math.round(number).toLocaleString('en-IN');
    };

    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    const currentMonthName = months[currentMonth - 1];

    let prevMonth = currentMonth - 1;
    let prevYear = currentYear;
    if (prevMonth === 0) {
        prevMonth = 12;
        prevYear -= 1;
    }

    let nextMonth = currentMonth + 1;
    let nextYear = currentYear;
    if (nextMonth === 13) {
        nextMonth = 1;
        nextYear += 1;
    }
%>

<style>
    /* Stat card design from profile page */
    .stat-card {
        background: #fff;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        border: 1px solid #E5E7EB;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    
    .stat-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.12);
    }
    
    .stat-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1rem;
    }
    
    .stat-title {
        font-weight: 600;
        color: #374151;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    
    .stat-icon {
        width: 40px;
        height: 40px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.25rem;
    }
    
    .stat-value {
        font-size: 2rem;
        font-weight: 700;
        color: #111827;
        margin-bottom: 0.5rem;
    }
    
    .stat-change {
        font-size: 0.875rem;
        color: #6B7280;
    }
    
    .stat-change.positive {
        color: #059669;
    }
    
    .stat-change.negative {
        color: #DC2626;
    }
    
    /* Action button styling */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }
    
    .action-buttons .btn {
        width: 32px;
        height: 32px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 6px;
        font-size: 0.875rem;
        transition: all 0.2s ease;
    }
    
    .action-buttons .btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0,0,0,0.15);
    }
    
    .action-buttons .btn-outline-primary {
        border-color: #4F46E5;
        color: #4F46E5;
    }
    
    .action-buttons .btn-outline-primary:hover {
        background-color: #4F46E5;
        border-color: #4F46E5;
        color: white;
    }
    
    .action-buttons .btn-outline-danger {
        border-color: #DC2626;
        color: #DC2626;
    }
    
    .action-buttons .btn-outline-danger:hover {
        background-color: #DC2626;
        border-color: #DC2626;
        color: white;
    }
    
    /* Additional utility classes */
    .text-success {
        color: #059669 !important;
    }
    
    .text-danger {
        color: #DC2626 !important;
    }
    
    .text-warning {
        color: #D97706 !important;
    }

    /* Mobile responsive styles for budgets */
    @media (max-width: 768px) {
        .page-title {
            font-size: 1.8rem !important;
        }
        
        .month-navigation {
            margin-bottom: 2rem;
        }
        
        .month-navigation .h4 {
            font-size: 1.2rem;
        }
        
        .budget-card {
            margin-bottom: 1rem;
        }
        
        .budget-card .card-body {
            padding: 1rem;
        }
        
        .budget-card h5 {
            font-size: 1rem;
        }
        
        .budget-card .fs-4 {
            font-size: 1.25rem !important;
        }
        
        .budget-categories-title {
            font-size: 1.3rem;
            text-align: center;
        }
        
        .budget-item {
            margin-bottom: 1rem;
        }
        
        .stat-card {
            padding: 1rem;
        }
        
        .stat-value {
            font-size: 1.5rem;
        }
        
        .action-buttons .btn {
            width: 28px;
            height: 28px;
            font-size: 0.75rem;
        }
    }
    
    @media (max-width: 576px) {
        .page-title {
            font-size: 1.5rem !important;
        }
        
        .month-navigation .h4 {
            font-size: 1.1rem;
        }
        
        .budget-card .card-body {
            padding: 0.75rem;
        }
        
        .budget-card h5 {
            font-size: 0.9rem;
        }
        
        .budget-card .fs-4 {
            font-size: 1.1rem !important;
        }
        
        .budget-categories-title {
            font-size: 1.1rem;
        }
        
        .budget-item {
            margin-bottom: 0.75rem;
        }
        
        .stat-card {
            padding: 0.75rem;
        }
        
        .stat-value {
            font-size: 1.25rem;
        }
        
        .action-buttons .btn {
            width: 26px;
            height: 26px;
            font-size: 0.7rem;
        }
    }
</style>

<div class="row mb-4 align-items-center">
    <div class="col-12">
        <h1 class="page-title text-center" style="font-weight: 800; font-size: 2.5rem; color: #4F46E5; margin-bottom: 0;">Budget Management</h1>
    </div>
</div>

<div class="month-navigation text-center mb-4">
    <a href="/budgets?month=<%= prevMonth %>&year=<%= prevYear %>" class="btn btn-link text-decoration-none"><i class="fas fa-chevron-left"></i></a>
    <span class="h4 mx-4"><%= currentMonthName %>, <%= currentYear %></span>
    <a href="/budgets?month=<%= nextMonth %>&year=<%= nextYear %>" class="btn btn-link text-decoration-none"><i class="fas fa-chevron-right"></i></a>
</div>

<div class="row justify-content-center text-center mb-4 g-4">
    <div class="col-12 col-md-4 col-lg-4">
        <div class="card h-50 budget-card">
            <div class="card-body">
                <h5 class="card-title">Total Budget <a href="#" data-bs-toggle="modal" data-bs-target="#editMonthlyBudgetModal"><i class="fas fa-edit"></i></a></h5>
                <p class="card-text fs-4">Rs <%= formatNepaleseCurrency(totalBudget) %></p>
            </div>
        </div>
    </div>
</div>

<div class="d-flex justify-content-center align-items-center mb-4 flex-wrap">
    <h3 class="mb-0 budget-categories-title">Budgeted categories: <%= currentMonthName %>, <%= currentYear %></h3>
    <% if (budgets.length > 0) { %>
    <div class="dropdown ms-2">
        <button class="btn btn-sm btn-icon" type="button" id="removeAllDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="border: none; background: transparent;">
            <i class="fas fa-ellipsis-v"></i>
        </button>
        <ul class="dropdown-menu" aria-labelledby="removeAllDropdown">
            <li><a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#removeAllBudgetsModal">Remove All</a></li>
        </ul>
    </div>
    <% } %>
</div>

<div class="row justify-content-center accordion" id="budgetAccordion">
    <% if (budgets.length > 0) { %>
            <% budgets.forEach(budget => { %>
                <% 
                    const spent = budget.transactions.reduce((total, t) => total + t.amount, 0);
                    const remaining = budget.amount - spent;
                    const percentageSpent = budget.amount > 0 ? (spent / budget.amount) * 100 : 0;

                    let progressColor = 'bg-success';
                    if (percentageSpent > 75 && percentageSpent <= 100) {
                        progressColor = 'bg-warning';
                    } else if (percentageSpent > 100) {
                        progressColor = 'bg-danger';
                    }

                    const categoryIcons = {
                        'Food': 'fas fa-utensils',
                        'Transportation': 'fas fa-car',
                        'Utilities': 'fas fa-bolt',
                        'Housing': 'fas fa-home',
                        'Entertainment': 'fas fa-film',
                        'Health': 'fas fa-heartbeat',
                        'Shopping': 'fas fa-shopping-bag',
                        'Education': 'fas fa-user-graduate',
                        'Travel': 'fas fa-plane',
                        'Personal Care': 'fas fa-spa',
                        'Miscellaneous': 'fas fa-receipt',
                        'Groceries': 'fas fa-shopping-cart',
                        'Subscriptions': 'fas fa-rss-square',
                        'Gifts': 'fas fa-gift',
                        'Insurance': 'fas fa-shield-alt',
                        'Rent': 'fas fa-home',
                        'Fuel': 'fas fa-gas-pump',
                        'Public Transit': 'fas fa-bus',
                        'Other Expense': 'fas fa-tag'
                    };
                    const icon = categoryIcons[budget.category] || 'fas fa-dollar-sign';

                    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

                    const recommendation = smartRecommendations.find(r => r.category && budget.category && r.category.toLowerCase() === budget.category.toLowerCase()) || { message: 'No specific recommendation available.', type: 'info', icon: 'fas fa-info-circle' };

                    const recommendationTypeMap = {
                        'info': 'alert-info',
                        'warning': 'alert-warning',
                        'success': 'alert-success',
                        'danger': 'alert-danger'
                    };
                    const recommendationClass = recommendationTypeMap[recommendation.type] || 'alert-secondary';
                %>

                <div class="col-12 col-md-6 col-lg-5 col-xl-4 mb-4">
                    <div class="stat-card w-100">
                        <!-- Card Header with Action Buttons -->
                        <div class="stat-header">
                            <div class="stat-title"><%= budget.category %></div>
                            <div class="action-buttons">
                                <button class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#changeLimitModal-<%= budget._id %>" title="Edit Budget">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <form action="/budgets/<%= budget._id %>?_method=DELETE" method="POST" class="d-inline" onsubmit="return confirm('Are you sure you want to remove this budget?');">
                                    <button type="submit" class="btn btn-sm btn-outline-danger" title="Remove Budget">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                        
                        <!-- Card Content -->
                        <div class="stat-value">Rs <%= formatNepaleseCurrency(budget.amount) %></div>
                        <div class="stat-change">
                            <div class="d-flex justify-content-between mb-1">
                                <span>Spent:</span>
                                <span>Rs <%= formatNepaleseCurrency(spent) %></span>
                            </div>
                            <div class="d-flex justify-content-between mb-1">
                                <span>Remaining:</span>
                                <span class="<%= remaining < 0 ? 'text-danger' : 'text-success' %>">Rs <%= formatNepaleseCurrency(Math.max(0, remaining)) %></span>
                            </div>
                            <div class="progress mt-2" style="height: 8px;">
                                <div class="progress-bar <%= progressColor %>" role="progressbar" style="width: <%= Math.min(percentageSpent, 100) %>%" aria-valuenow="<%= percentageSpent %>" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>

                        <!-- Card Footer with Collapsible Recommendation -->
                        <div class="card-footer bg-transparent border-0 p-0 mt-3">
                            <a class="text-decoration-none text-dark d-flex justify-content-between align-items-center" data-bs-toggle="collapse" href="#collapse-<%= budget._id %>" role="button" aria-expanded="false" aria-controls="collapse-<%= budget._id %>">
                                <span><i class="fas fa-lightbulb me-1"></i>  Insight</span>
                                <i class="fas fa-chevron-down"></i>
                            </a>
                            <div class="collapse mt-2" id="collapse-<%= budget._id %>" data-bs-parent="#budgetAccordion">
                                <div class="alert <%= recommendationClass %> mb-0" role="alert">
                                    <div class="d-flex align-items-start">
                                        <i class="fas <%= recommendation.icon || 'fa-info-circle' %> me-2 mt-1"></i>
                                        <div class="flex-grow-1">
                                            <div class="fw-bold mb-1"><%= recommendation.recommendation || recommendation.message %></div>
                                            
                                            <% if (recommendation.actionableAdvice && recommendation.actionableAdvice.length > 0) { %>
                                                <div class="mt-2">
                                                    <small class="text-muted fw-bold">Action Items:</small>
                                                    <ul class="list-unstyled mt-1 mb-0">
                                                        <% recommendation.actionableAdvice.slice(0, 3).forEach(function(advice) { %>
                                                            <li class="small">
                                                                <i class="fas fa-arrow-right me-1 text-primary"></i>
                                                                <%= advice %>
                                                            </li>
                                                        <% }); %>
                                                    </ul>
                                                </div>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Change Limit Modal -->
                <div class="modal fade" id="changeLimitModal-<%= budget._id %>" tabindex="-1" aria-labelledby="changeLimitModalLabel-<%= budget._id %>" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="changeLimitModalLabel-<%= budget._id %>">Change Budget Limit for <%= budget.category %></h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <form action="/budgets/<%= budget._id %>?_method=PUT" method="POST">
                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label for="amount-<%= budget._id %>" class="form-label">New Limit (Rs)</label>
                                        <div class="input-group">
                                            <span class="input-group-text">Rs</span>
                                            <input type="number" class="form-control change-limit-amount" name="amount" value="<%= Math.round(budget.amount) %>" step="1" required data-budget-id="<%= budget._id %>">
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-primary save-changes-btn" data-budget-id="<%= budget._id %>">Save Changes</button>
                                    <div class="form-text text-danger mt-2 change-limit-warning" data-budget-id="<%= budget._id %>" style="display: none;"></div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            <% }); %>
    <% } else { %>
    <div class="col-md-8 text-center">
        <div class="card p-4" style="border-radius: 15px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); text-align: center;">
            <div style="font-size: 3rem; color: #6c757d; margin-bottom: 1rem;">
                <i class="fas fa-calculator"></i><i class="fas fa-exclamation" style="font-size: 1.5rem; position: relative; top: -1rem; left: -0.5rem; color: #ffc107;"></i>
            </div>
            <h6 class="mb-3"></h6>
            <p class="text-muted">No budget was applied for specific Category this month.</p>
        </div>
    </div>
    <% } %>
</div>

<!-- Floating Action Button -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addBudgetModal" style="position: fixed; bottom: 30px; right: 30px; width: 60px; height: 60px; border-radius: 50%; font-size: 24px; box-shadow: 0 4px 12px rgba(0,0,0,0.2); z-index: 1030; display: flex; align-items: center; justify-content: center;">
    <i class="fas fa-plus"></i>
</button>

<!-- Edit Monthly Budget Modal -->
<div class="modal fade" id="editMonthlyBudgetModal" tabindex="-1" aria-labelledby="editMonthlyBudgetModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form action="/budgets/monthly" method="POST">
                <div class="modal-header">
                    <h5 class="modal-title" id="editMonthlyBudgetModalLabel">Set Total Monthly Budget</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Set a total budget for <strong><%= currentMonthName %>, <%= currentYear %></strong>. This will be the maximum amount you can allocate across all categories for this month.</p>
                    <div class="input-group">
                        <span class="input-group-text">Rs</span>
                        <input type="number" class="form-control" name="amount" value="<%= totalBudget > 0 ? Math.round(totalBudget) : '' %>" placeholder="e.g., 25000" step="1" required>
                    </div>
                    <input type="hidden" name="month" value="<%= currentMonth %>">
                    <input type="hidden" name="year" value="<%= currentYear %>">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Budget</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Remove All Budgets Confirmation Modal -->
<div class="modal fade" id="removeAllBudgetsModal" tabindex="-1" aria-labelledby="removeAllBudgetsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="removeAllBudgetsModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to remove all budget categories for this month? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="removeAllBudgetsForm" action="/budgets/all-by-month?_method=DELETE" method="POST" style="display: inline;">
                    <input type="hidden" name="month" value="<%= currentMonth %>">
                    <input type="hidden" name="year" value="<%= currentYear %>">
                    <button type="submit" class="btn btn-danger">Remove All</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Add Budget Modal -->
<div class="modal fade" id="addBudgetModal" tabindex="-1" aria-labelledby="addBudgetModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addBudgetModalLabel">Create New Budget</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="/budgets" method="POST" id="budgetForm">
                    <div class="mb-3">
                        <label for="category" class="form-label">Category</label>
                        <select class="form-select" id="category" name="category" required>
                            <option value="">Select a category</option>
                            <option value="Food">Food</option>
                            <option value="Groceries">Groceries</option>
                            <option value="Fuel">Fuel</option>
                            <option value="Public Transit">Public Transit</option>
                            <option value="Entertainment">Entertainment</option>
                            <option value="Shopping">Shopping</option>
                            <option value="Rent">Rent</option>
                            <option value="Travel">Travel</option>
                            <option value="Other Expense">Other Expense</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="amount" class="form-label">Budget Amount</label>
                        <div class="input-group">
                            <span class="input-group-text">Rs</span>
                            <input type="number" class="form-control" id="amount" name="amount" placeholder="e.g., 5000" step="1" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="month" class="form-label">Month</label>
                            <select class="form-select" id="month" name="month" required>
                                <option value="1" <%= currentMonth === 1 ? 'selected' : '' %>>January</option>
                                <option value="2" <%= currentMonth === 2 ? 'selected' : '' %>>February</option>
                                <option value="3" <%= currentMonth === 3 ? 'selected' : '' %>>March</option>
                                <option value="4" <%= currentMonth === 4 ? 'selected' : '' %>>April</option>
                                <option value="5" <%= currentMonth === 5 ? 'selected' : '' %>>May</option>
                                <option value="6" <%= currentMonth === 6 ? 'selected' : '' %>>June</option>
                                <option value="7" <%= currentMonth === 7 ? 'selected' : '' %>>July</option>
                                <option value="8" <%= currentMonth === 8 ? 'selected' : '' %>>August</option>
                                <option value="9" <%= currentMonth === 9 ? 'selected' : '' %>>September</option>
                                <option value="10" <%= currentMonth === 10 ? 'selected' : '' %>>October</option>
                                <option value="11" <%= currentMonth === 11 ? 'selected' : '' %>>November</option>
                                <option value="12" <%= currentMonth === 12 ? 'selected' : '' %>>December</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="year" class="form-label">Year</label>
                            <input type="number" class="form-control" id="year" name="year" value="<%= currentYear %>" min="2020" max="2030" required>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="budgetForm" class="btn btn-primary" id="createBudgetBtn">Create Budget</button>
                <div id="budgetWarning" class="form-text text-danger mt-2" style="display: none;"></div>
            </div>
        </div>
    </div>
</div>

<div id="page-data" data-total-budget="<%= totalBudget %>" data-budgets='<%- JSON.stringify(budgets) %>'></div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const pageData = document.getElementById('page-data');
        const totalBudget = parseFloat(pageData.dataset.totalBudget);
        const categoryBudgets = JSON.parse(pageData.dataset.budgets);
        const currentCategoryTotal = categoryBudgets.reduce((sum, b) => sum + b.amount, 0);

        const amountInput = document.getElementById('amount');
        const categoryInput = document.getElementById('category');
        const budgetForm = document.getElementById('budgetForm');
        const createBudgetBtn = document.getElementById('createBudgetBtn');
        const budgetWarning = document.getElementById('budgetWarning');

        function validateBudget() {
            const newAmount = parseFloat(amountInput.value) || 0;
            const selectedCategory = categoryInput.value;

            // Find if a budget for the selected category already exists
            const existingBudget = categoryBudgets.find(b => b.category === selectedCategory);
            const existingAmount = existingBudget ? existingBudget.amount : 0;

            // Calculate the total of *other* category budgets
            const otherCategoriesTotal = currentCategoryTotal - existingAmount;

            if (otherCategoriesTotal + newAmount > totalBudget) {
                const remaining = totalBudget - otherCategoriesTotal;
                budgetWarning.textContent = `Warning: This exceeds your monthly budget.`;
                budgetWarning.style.display = 'block';
                createBudgetBtn.disabled = true;
            } else {
                budgetWarning.style.display = 'none';
                createBudgetBtn.disabled = false;
            }
        }

        if (budgetForm) {
            amountInput.addEventListener('input', validateBudget);
            categoryInput.addEventListener('change', validateBudget);
        }

        // --- New validation for changing limits ---
        const allChangeInputs = document.querySelectorAll('.change-limit-amount');

        allChangeInputs.forEach(input => {
            input.addEventListener('input', function() {
                const budgetId = this.dataset.budgetId;
                const newAmount = parseFloat(this.value) || 0;
                
                const saveBtn = document.querySelector(`.save-changes-btn[data-budget-id='${budgetId}']`);
                const warningText = document.querySelector(`.change-limit-warning[data-budget-id='${budgetId}']`);

                const budgetToUpdate = categoryBudgets.find(b => b._id === budgetId);
                if (!budgetToUpdate) return;

                const otherCategoriesTotal = categoryBudgets
                    .filter(b => b._id !== budgetId)
                    .reduce((sum, b) => sum + b.amount, 0);

                if (otherCategoriesTotal + newAmount > totalBudget) {
                    warningText.textContent = 'Warning: This exceeds your monthly budget.';
                    warningText.style.display = 'block';
                    saveBtn.disabled = true;
                } else {
                    warningText.style.display = 'none';
                    saveBtn.disabled = false;
                }
            });
        });
    });
</script>

<!-- Budget insights are integrated directly into each budget card -->
